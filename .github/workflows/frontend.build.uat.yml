name: (UAT) Frontend - build

on:
  workflow_dispatch:
    inputs:
      IMAGE_VERSION:
        default: "latest"

jobs:
  build_frontend:
    runs-on: ubuntu-latest
    environment: uat
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-access-key-id: ${{ secrets.RELEASE_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.RELEASE_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.RELEASE_AWS_REGION }}

      - name: Fetch Parameters from AWS SSM
        run: |
          PARAM_NAMES=(
            "APP_FE_NODE_ENV"
            "APP_SHARED_FRONTEND_URL"
            "APP_SHARED_BACKEND_URL"
            "APP_SHARED_COOKIE_DOMAIN"
            "APP_FE_AWS_CLOUDFRONT_DISTRIBUTION_URL"
            "APP_FE_LOG_LEVEL"
            "APP_SHARED_SITE_NAME"
          )

          for PARAM in "${PARAM_NAMES[@]}"; do
            VALUE=$(aws ssm get-parameter \
              --name "/ent/uat/$PARAM" \
              --with-decryption \
              --query "Parameter.Value" \
              --output text)
            echo "$PARAM=$VALUE" >> $GITHUB_ENV
          done

      - name: Log in to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2.0.1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.7.1

      - name: Build and Push Test Frontend Image
        uses: docker/build-push-action@v6.9.0
        with:
          context: .
          file: docker/images/node-next/Dockerfile
          target: test
          push: true
          tags: "${{ steps.ecr-login.outputs.registry }}/${{ vars.RELEASE_FE_IMAGE_REPOSITORY }}:test-${{ inputs.IMAGE_VERSION }}"
          build-args: |
            PORT=${{ vars.RELEASE_FE_PORT }}
            NODE_ENV=test
            NEXT_PUBLIC_FRONTEND_URL=${{ env.APP_SHARED_FRONTEND_URL }}
            NEXT_PUBLIC_BACKEND_URL=${{ env.APP_SHARED_BACKEND_URL }}
            NEXT_PUBLIC_COOKIE_DOMAIN=${{ env.APP_SHARED_COOKIE_DOMAIN }}
            NEXT_PUBLIC_AWS_CLOUDFRONT_DISTRIBUTION_URL=${{ env.APP_FE_AWS_CLOUDFRONT_DISTRIBUTION_URL }}
            NEXT_PUBLIC_LOG_LEVEL=${{ env.APP_FE_LOG_LEVEL }}
            NEXT_PUBLIC_SITE_NAME=${{ env.APP_SHARED_SITE_NAME }}

      - name: Build and Push Production Frontend Image
        uses: docker/build-push-action@v6.9.0
        with:
          context: .
          file: docker/images/node-next/Dockerfile
          target: production
          push: true
          tags: "${{ steps.ecr-login.outputs.registry }}/${{ vars.RELEASE_FE_IMAGE_REPOSITORY }}:${{ inputs.IMAGE_VERSION }}"
          build-args: |
            PORT=${{ vars.RELEASE_FE_PORT }}
            NODE_ENV=${{ env.APP_FE_NODE_ENV }}
            NEXT_PUBLIC_FRONTEND_URL=${{ env.APP_SHARED_FRONTEND_URL }}
            NEXT_PUBLIC_BACKEND_URL=${{ env.APP_SHARED_BACKEND_URL }}
            NEXT_PUBLIC_COOKIE_DOMAIN=${{ env.APP_SHARED_COOKIE_DOMAIN }}
            NEXT_PUBLIC_AWS_CLOUDFRONT_DISTRIBUTION_URL=${{ env.APP_FE_AWS_CLOUDFRONT_DISTRIBUTION_URL }}
            NEXT_PUBLIC_LOG_LEVEL=${{ env.APP_FE_LOG_LEVEL }}
            NEXT_PUBLIC_SITE_NAME=${{ env.APP_SHARED_SITE_NAME }}
